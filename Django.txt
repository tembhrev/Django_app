HTML, CSS and Javascript
DOM and jquery
python
Django and SQLite
website clone


How web works
-------------
You start off by typing the URL into your browser.

Your computer then sends this request as a packet, which includes the IP address of the website you want.

It sends this request through wires, or a satellite which eventually links to wires using your ISP.

Your ISP will then re-route the request to the appropriate server location, using the IP address as the guide.

Once your request reaches the server, it can  send back the website you asked for.

However a full website with content is too big to send as a single packet of data.

To solve this, the server sends back the website split up into many packets.

The packets come with instructions on how to get back to you and reassemble once they reach you.

The packets don’t care how they get to you, just the final location.

Once the packets reach you, they are reassembled to show the page.

All of this moves at close to the speed of light, so it happens very fast.

There are two main components of a website
The Front-End
The Back-End

The Front-End is what you see as a user on the website. 
The Back-End is the technology used to actually decide what to show you on the Front-End.

The Front-End revolves around three technologies:
HTML
CSS
Javascript

Front-End technologies such as jQuery and Bootstrap, but those are all built using the previous three.

HTML - HyperText Markup language
Every website will have HTML, it is the structure of a page.
You can view it by right-clicking and selecting “View Page Source”

CSS - Cascading Style Sheets
CSS is the actual styling of the website.
Colors, fonts, borders, etc is all defined by CSS.
CSS is not mandatory, but almost all sites have it.

Javascript allows you to add interactivity to the website, including programming logic.
Any site with interactivity uses Javascript in some way, otherwise the site is “static”.

The Back-End of a site has three components:
The Language
The Framework
The Database

Our course Back-End uses:
Python as the language
Django as the Framework
SQLite as the Database

technologies such as CSS to style the HTML and Javascript to add functionality.

HTML Basics
Tagging
Lists
Divs and Spans
Attributes

<h1></h1>
<h2></h2>
<h3></h3>
<h4></h4>
<h5></h5>
<h6></h6>

<p></p>
<i></i> or <em></em>
<b></b> or <strong></strong>

Let’s get all our information on our HTML page organized!
One way to do this is with a list.
HTML has two types of lists: ordered and unordered.
We can then add list elements to each!

<ol></ol>
<li></li>
<ul></ul>

Divs and Spans -used to group blocks of HTML

<div class="groupone">
      <h1>Group One</h1>
      <p>want to be together in group one</p>
</div>

<div class="groupone">
      <h1>Group One</h1>
      <p>want to be <span>together in</span>group one</p>
</div>

Attributes:
-----------
HTML Attributes allow us to add more information to HTML tags
This includes things such as adding a link or referencing an image

<img src="view.png" alt="oh! Image not found">
img is self closing tag

<a href="https://www.google.com">Click Me</a>

HTML Tables
-------------
Tables in HTML consist of several tags working together:
<table>
<thead>
<th>
<tr>
<td>

<table border="5">
      <thead>
        <th>number</th>
        <th>color</th>
        <th>country</th>
      </thead>
      <tr>
        <td>250</td>
        <td>Red</td>
        <td>USA</td>
      </tr>
    </table>

Forms
-----
Creating Forms in HTML revolves around the <input> tag.
We will look at various types of inputs for forms and how we can use them to accept user input.
how to connect these tags to two features:
Actions
Labels

The use of the label tag will allow you to add labels in front of an input in your HTML form.

form selections
---------------
Radio Button (Linked)
Drop Down Menus
Text Area Inputs


CSS
----
Styling can affect color, font, size, borders, and many more properties of HTML
While you can define styling inside of an HTML file, it is much more common (and better) to create a separate .css file and then link it to the html file.

Google color picker

rgb -red green blue
rgba-red green blue alpha(0-1)
0-fully transparent
1-opaque

We can use “ids” to target single elements
We can use “classes” to target groups of elements
We can then use also use combinations of selector tags to target certain combinations of elements

*--> is used to select every element from the page

CSS topic called “specificity”
Specificity defines the hierarchy of CSS styling, and what type of tags overrule others.

CSS FONTS
----------
When dealing with fonts, we have to keep in mind that not every OS has every font!
We may need to provide the font for our website.

Because of this we will be exploring a few links:
OS support for certain fonts
Downloading fonts

The box model allows us to precisely dictate how we want HTML elements to look.
-----------
box model
=======
margin

border

padding

content
=======

1em = 16px
2em = 32px

Bootstrap is a very common framework used for Front-End Development
What is a Framework?
Framework
Inversion of Control
Default Behavior
Extensibility
Non-modifiable Framework Code

A large part of Bootstrap is not memorization but really understanding how to reference the documentation for your own use cases
For our level of use of Bootstrap, the differences between v3 and v4 won’t really be apparent to us
v4 is a major rewrite from v3, but we won’t dive deep enough to notice many of these differences

Some differences:
Panels are being replaced by cards
Larger default font sizes
New grid tier (XL)
Use of flexbox
Moved from Less to Sass

A key feature of Bootstrap are its default classes
You can call these classes to quickly and easily build good looking features for your web application!

We’ll go over button classes as well as container and Jumbotron classes.
First we will start off by showing how to connect an HTML file to Bootstrap!

Navbars are navigational bars that you will often see on the top of a website
In this section we will show how to manually create the basics of a NavBar


We will also see how to connect an HTML page to Javascript and jQuery
We haven’t really discussed those two technologies yet, but we will need them

Bootstrap Grids
--------------
The grid system for Bootstrap is one of its most fundamental features
So far we’ve mostly seen convenient tools that Bootstrap provides through classes.
The grid system goes much further than that!

The grid system provides the core mechanism by which using Bootstrap allows websites to look good across multiple devices of multiple screen sizes

What happens on different screen sizes?
We split the entire screen into 12 available columns.

We can use any combination of numbers that will eventually add up to 12 columns

The grid system call will make use of the class=”row”

-----------------------------
DOM- Document object Model

The DOM will allow us to interface our Javascript code to interact with HTML and CSS
Browsers will construct the DOM, which basically means storing all the HTML tags as Javascript objects.
We can see the DOM of any website.
Go to a website and in the console type:
document
That will return the HTML text of the page. To see the actual objects use:
console.dir(document)
This DOM will allow us to use Javascript to interact with the web page.
The DOM is enormous, most developers won’t use all the properties.
We will cover the common objects used, but be prepared for the unknown!

The HTML elements are properties of the DOM
Here are some important document attributes:
document.URL
document.body 
document.head 
document.links 

There are many methods for grabbing elements from the DOM:
document.getElementById()
document.getElementByClassName()
document.getElementsByTagName()
document.querySelector()
document.querySelectorAll()

Once you have grabbed an element, you can interact with it! 
myvariable.style.color (Many CSS options)
myvariable.textContent
myvariable.innerHTML
myvariable.getAttribute()
myvariable.setAttribute()

Many times we only want the interaction to occur on a particular event, such as a click or a hover.
We achieve this by adding an Event Listener
The javascript will be “listening” for an event to occur and then execute a function when it happens.

Listening for an event looks like this:
myvariable.addEventListener(event,func);
An example:
var head = document.querySelector(‘h1’);
head.addEventListener(“click”,changeColor);

There are many, many possible events! 
Clicks
Hovers
Double Clicks
Drags
Much More!
